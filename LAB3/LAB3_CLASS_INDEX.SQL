DROP TABLE SELES;
CREATE TABLE SELES (
    ORDER_ID NUMBER PRIMARY KEY,
    CUSTOMER_ID NUMBER,
    PRODUCT_ID NUMBER,
    ORDER_DATE DATE,
    QUANTITY NUMBER,
    PRICE NUMBER(10, 2),
    CATEGORY_ID NUMBER
);

BEGIN 
    FOR I IN 1..50000 LOOP
        INSERT INTO SELES VALUES (
            I,
            ROUND(DBMS_RANDOM.VALUE(0, 999), 0)+1,
            ROUND(DBMS_RANDOM.VALUE(0, 4999), 0)+1,
            TO_DATE('2020-01-01', 'YYYY-MM-DD') + ROUND(DBMS_RANDOM.VALUE(0, 1460), 0),
            ROUND(DBMS_RANDOM.VALUE(0, 49), 0)+1,
            ROUND(DBMS_RANDOM.VALUE(5, 499), 2),
            ROUND(DBMS_RANDOM.VALUE(0, 99), 0)+1
        );
        
    END LOOP;
    COMMIT;
END;
/

-- WITHOUT INDEX
SET TIMING ON;
SELECT * FROM SELES WHERE CUSTOMER_ID = 1;
SET TIMING OFF;

EXPLAIN PLAN FOR 
SELECT * FROM SELES WHERE CUSTOMER_ID = 1;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);


-- WITH INDEX
DROP INDEX SELES_CUSTOMER_ID_IDX;
CREATE INDEX SELES_CUSTOMER_ID_IDX ON SELES(CUSTOMER_ID);
SET TIMING ON;
SELECT * FROM SELES WHERE CUSTOMER_ID = 1;
SET TIMING OFF;

EXPLAIN PLAN FOR 
SELECT * FROM SELES WHERE CUSTOMER_ID = 1;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

-- INDEX METADATA
SELECT INDEX_NAME, INDEX_TYPE, TABLE_NAME, UNIQUENESS, STATUS
FROM USER_INDEXES
WHERE TABLE_NAME = 'SELES';

SELECT INDEX_NAME, BLEVEL, LEAF_BLOCKS, DISTINCT_KEYS, NUM_ROWS
FROM USER_INDEXES
WHERE TABLE_NAME = 'SELES';

ANALYZE TABLE SELES COMPUTE STATISTICS;

SELECT COUNT(*) FROM SELES;


-- CLEANUP
DROP TABLE SELES;