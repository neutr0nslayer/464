-- > connect sys/system as sysdba 
-- > create user cse464 identified by CSE464
-- > grant connect, create session, create table , create view, create procedure, create trigger, unlimited tablespace to cse464 

CONNECT sys/password AS SYSDBA;

ALTER DATABASE OPEN;
ALTER SESSION SET CONTAINER = ORCLPDB;
CREATE USER CSE464 IDENTIFIED BY CSE464;
GRANT CONNECT, CREATE SESSION, CREATE TABLE, CREATE VIEW, CREATE PROCEDURE, CREATE TRIGGER, UNLIMITED TABLESPACE TO CSE464;

GRANT PLUSTRACE TO CSE464;
GRANT SELECT ON v_$session TO CSE464;
GRANT SELECT ON v_$sql_plan TO CSE464;
GRANT SELECT ON v_$sql_plan_statistics TO CSE464;

CONNECT CSE464/CSE464
DROP TABLE employees;
DROP TABLE departments;
DROP INDEX IDX_EMP_SALARY;
DROP INDEX EMPLOYEES_NAME;
DROP INDEX EMPLOYEES_SALARY_IDX;

COMMIT;
CREATE TABLE employees(
	employee_id NUMBER PRIMARY KEY,
	name VARCHAR2(20),
	salary NUMBER,
	dept_name VARCHAR2(10)
);
INSERT INTO employees VALUES (1,'Alice',75000, 'HR');
INSERT INTO employees VALUES (2,'Bob',50000, 'IT');
INSERT INTO employees VALUES (3,'Charlie',12000, 'HR');
INSERT INTO employees VALUES (4,'Danny',100000, 'IT');
INSERT INTO employees VALUES (5,'Elton',90000, 'HR');

CREATE TABLE departments(
    dept_id NUMBER PRIMARY KEY,
    dept_name VARCHAR2(20),
    location VARCHAR2(50)
);

INSERT INTO departments VALUES (1, 'HR', 'Building A');
INSERT INTO departments VALUES (2, 'IT', 'Building B');
INSERT INTO departments VALUES (3, 'Finance', 'Building C');
commit;


SET SERVEROUTPUT ON;
SET AUTOTRACE ON;

EXPLAIN PLAN FOR 
SELECT /*+ INDEX(EMPLOYEES EMPLOYEES_NAME)*/* FROM EMPLOYEES WHERE NAME = 'Alice';

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

DROP INDEX EMPLOYEES_NAME;
CREATE INDEX EMPLOYEES_NAME ON EMPLOYEES(NAME);


DROP INDEX EMPLOYEES_SALARY_IDX;
CREATE INDEX EMPLOYEES_SALARY_IDX ON EMPLOYEES(SALARY);


EXPLAIN PLAN FOR 
SELECT /*+ INDEX(EMPLOYEES EMPLOYEES_SALARY_IDX) */* FROM EMPLOYEES WHERE SALARY >= 60000;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

EXPLAIN PLAN FOR
SELECT /*+ FULL(EMPLOYEES) */ * FROM EMPLOYEES WHERE SALARY >=60000;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

SELECT /*+ ORDERED */* FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPT_NAME = D.DEPT_NAME;

SELECT /*+ USE_NL(EMPLOYEES, DEPARTMENTS)*/ * FROM EMPLOYEES NATURAL JOIN DEPARTMENTS;

SELECT /*+ USE_HASH(EMPLOYEES, DEPARTMENTS)*/ * FROM EMPLOYEES NATURAL JOIN DEPARTMENTS;

SELECT /*+ USE_MERGE(EMPLOYEES, DEPARTMENTS)*/ * FROM EMPLOYEES NATURAL JOIN DEPARTMENTS;


CREATE OR REPLACE TRIGGER NOTIFY_UPDATE AFTER UPDATE ON EMPLOYEES 
FOR EACH ROW 
BEGIN 
	DBMS_OUTPUT.PUT_LINE('OLD'|| :OLD.SALARY ||' NEW'||:NEW.SALARY);
END;
/


BEGIN
	UPDATE EMPLOYEES SET SALARY = 700000 WHERE EMPLOYEE_ID = 2;
	SAVEPOINT S1;
	UPDATE EMPLOYEES SET SALARY = 700000 WHERE EMPLOYEE_ID = 1;
	ROLLBACK TO S1 ;
	COMMIT;
	
END;
/
SELECT * FROM EMPLOYEES ;

-- Transaction 1
BEGIN
    UPDATE employees SET salary = salary + 500 WHERE name = 'Alice';
    DBMS_LOCK.SLEEP(5);
    UPDATE employees SET salary = salary + 500 WHERE name = 'Bob';
    COMMIT;
END;
/

-- Transaction 2 (Executed simultaneously in another session)
BEGIN
    UPDATE employees SET salary = salary + 1000 WHERE name = 'Bob';
    DBMS_LOCK.SLEEP(5);
    UPDATE employees SET salary = salary + 1000 WHERE name = 'Alice';
    COMMIT;
END;
/